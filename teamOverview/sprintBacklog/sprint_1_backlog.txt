Sprint 1 Backlog
Oct 17 to Oct 21
--------------------------------------------------------------------------------
User Stories from Product Backlog that we will address in this sprint:

1) As a TEQ employee, Mike James, I want to make only authorized agency accounts
   able to access all of the uploaded data so that we can maintain the privacy 
   of the organizations

2) As a volunteer for agency XYZ, Sam Spongy, I want to be able to upload any of
   the 8 different types of iCare excel files so that the agency that I 
   represent can contribute to the CCS program

4) As a volunteer for agency XYZ, Sam Spongy, I want to be able to view any data
   conflicts (i.e. due to duplicate fields like Child 1, Child 2, etc.) or 
   missing data when uploading, so that I can ensure that the data I uploaded is
   accurate
   
5) As a junior TEQ member, James Wowman, I want to be able to view generic trend
   reports (graphs, maps, excel files etc.) so that I have a general picture of
   what trends are occurring
   
6) As a long-term TEQ employee, Louis Chan, I want to be able to create custom
   queries by selecting from a list of variables from a drop-down bar so that I
   can customize the data I want to see
--------------------------------------------------------------------------------
Specific Tasks to be accompished (tasks with letters are independent of 
another task):

User Story 1:
Task 1   [2 pts]: Set up an authorized agency account for agencies

Task 2   [2 pts]: Set up a TEQ account for the user

Task 3   [5 pts]: Set up a database to store the uploaded data

Task 3a  [5 pts]: Set up a database to store accounts

Task 4   [2 pts]: Connect the authorized agency account to the database
                  -Dependent on task 1 and 3a


User Story 2:
Task 6   [3 pts]: Implement a function that takes in excel files

Task 7   [1 pts]: Prompt a message in the end after the upload is complete or a 
                  message saying not a valid document
                  -Dependent on task 5, 6

Task 8   [8 pts]: Set up a function which checks for different types of excel
                  files to determine how to parse the data
                  -Dependent on task 6

Task 9   [8 pts]: Have a function which parses the DataFrame from the excel file
                  into different columns
                  -Dependent on task 3 and 6

                  
User Story 4:
Task 13  [2 pts]: Begin by checking what entries the agency is trying to submit
                  before entering into the database
                  -Dependent on task 6


User Story 5:                  
Task 16  [3 pts]: Collect data from the database relative to the specific trends
                  -Dependent on task 3


User Story 6:
Task 18  [2 pts]: Begin by outputting which fields can be viewed, then give the
                  user the option of selecting which field(s) they wish to view
                  -Dependent on task 3 and 9
--------------------------------------------------------------------------------
Members' estimated availability are as follows:
David:  0 on Wednesday, 0 on Thursday, 3 on Friday, 0 on Saturday, 2 on Sunday
Dann:   0 on Wednesday, 0 on Thursday, 0 on Friday, 3 on Saturday, 2 on Sunday
Philip: 2 on Wednesday, 1 on Thursday, 2 on Friday, 1 on Saturday, 2 on Sunday
Riaz:   0 on Wednesday, 0 on Thursday, 3 on Friday, 2 on Saturday, 0 on Sunday
Susan:  4 on Wednesday, 1 on Thursday, 3 on Friday, 1 on Saturday, 1 on Sunday
--------------------------------------------------------------------------------
Tasks are assigned as follows:

Member: David
Tasks: 9, 16

Member: Dann
Tasks: 8

Member: Philip
Tasks: 1, 2, 18

Member: Riaz
Tasks: 6, 7, 13

Member: Susan
Tasks: 3, 3a, 4
--------------------------------------------------------------------------------
Excess tasks:

Task 6a   [1 pts]: Implement the Abstract Command class
Task 6b   [2 pts]: Implement the OutputQueue class