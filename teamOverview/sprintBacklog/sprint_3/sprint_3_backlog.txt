Sprint 3 Backlog
Oct 31 to Nov 4
--------------------------------------------------------------------------------
Sprint 2 Completion Report

Tasks accomplished:
David: 
Dann: 5a, 5b, 10a
Susan: 4, 4a
Philip: 
--------------------------------------------------------------------------------
Changes and updates:

-A discussion was held on October 31st, majority of the previous tasks were 
 not found to be viable. Therefore, a majority of the tasks were not carried
 over.

-Highest possible numbered task from previous sprints was 16, so tasks will
 start from 17 and onward. One of the remaining tasks from the previous sprint
 was task 10.

-To adapt, new tasks were made in accordance to design. A task backlog will be
 created later to reflect the tasks.

-Note that a user story has been added for this sprint. A new version of user
 stories is needed.

-Design should be uploaded to the product backlog soon.
--------------------------------------------------------------------------------
User Stories from Product Backlog that we will address in this sprint:

1)   As a TEQ employee, Mike James, I want to make only authorized agency
     accounts able to access all of the uploaded data so that we can maintain 
     the privacy of the organizations

1a)  As a TEQ employee, Mike James, I want to email agencies their certified
     account so that they are informed that they have an account to contribute
     to the TEQ program

2)   As a volunteer for agency XYZ, Sam Spongy, I want to be able to upload any
     of the 8 different types of iCare excel files so that the agency that I
     represent can contribute to the CCS program

3)  As a volunteer for agency XYZ, Sam Spongy, I expect that when I upload my
    data, all entries are automatically formatted to comply with the systemâ€™s
    format so that I do not have to manually change any entries

10) As a TEQ employee, Mike James, I want to be able to remove agencies in the
    event that they close down so that we don't have any irrelevant data

--------------------------------------------------------------------------------
Specific Tasks to be accompished:

User Story 1:
Task 17   [3 pts]: Make an 'AccountCreator' class to securely make an account
                   to the Account Database

Task 18   [3 pts]: Make a 'PasswordChanger' class to securely change the
                   password through the accounts database


User Story 1a:
Task 19   [1 pts]: Implement the 'Emailer' interface

Task 20   [5 pts]: Implement the 'AccountCreatorEmailer' class
                   -Dependent on task 17, 19

Task 21   [1 pts]: Implement the 'PasswordForgettingEmailer' class
                   -Dependent on task 18, 19


User Story 2:
Task 10  [13 pts]: Implement a class to store the parsed (beautiful) data into
                   the database (the class may be called 'BeautifulUploader')

Task 22   [5 pts]: Implement the MissingValueChecker as described in the design
                   -Dependent on task 24

Task 23   [2 pts]: Implement the DuplicateRowChecker as described in the design

Task 24   [1 pts]: Implement the TemplateHelper Interface

Task 25   [1 pts]: Implement the ClientProfileTemplateHelper
                   -Dependent on task 24

Task 26   [1 pts]: Implement the NeedsAndAssessmentTemplateHelper
                   -Dependent on task 24

Task 27   [1 pts]: Implement the CommunityConnectionsTemplateHelper
                   -Dependent on task 24
                   
Task 28   [1 pts]: Implement the InformationAndOrientationTemplateHelper
                   -Dependent on task 24

Task 29   [1 pts]: Implement the EmploymentTemplateHelper
                   -Dependent on task 24

Task 30   [1 pts]: Implement the LTClientTemplateHelper
                   -Dependent on task 24

Task 31   [1 pts]: Implement the LTCourseHelper
                   -Dependent on task 24

Task 32   [1 pts]: Implement the LTClientExitTemplateHelper
                   -Dependent on task 24


User Story 3:
Task 33  [8 pts]: Implement the 'DataAggregator' class as described in the 
                  design
                  -Dependent on task 24


User Story 10:                  
Task 34  [1 pts]: Implement a functionality to remove agency users from the
                  database
                  -Dependent on task 20
--------------------------------------------------------------------------------
Members' estimated availability are as follows:
David:  1 on Wednesday, 0 on Thursday, 3 on Friday, 3 on Saturday, 3 on Sunday
Dann:   1 on Wednesday, 0 on Thursday, 2 on Friday, 3 on Saturday, 3 on Sunday
Philip: 1 on Wednesday, 1 on Thursday, 1 on Friday, 1 on Saturday, 4 on Sunday
Riaz:   0 on Wednesday, 0 on Thursday, 4 on Friday, 2 on Saturday, 0 on Sunday
Susan:  0 on Wednesday, 0 on Thursday, 3 on Friday, 4 on Saturday, 4 on Sunday
--------------------------------------------------------------------------------
Tasks are assigned as follows:

Member: David
Tasks: 17, 18, 19, 20, 21

Member: Dann
Tasks: 24, 23, 26, 27, 28, 30, 31, 32

Member: Philip
Tasks: 25, 33

Member: Riaz
Tasks: 22, 29

Member: Susan
Tasks: 10, 34
--------------------------------------------------------------------------------
Excess Tasks:

User Story 2:
Task 24a  [3 pts]: Implement the Template Processor

Task 24b  [3 pts]: Implement the Dropdown Processor
